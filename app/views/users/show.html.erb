 <section id="user" data-json="<%= @user.to_json %>">
  <header>Hello, <%= @user.name %></header>
  <form id="user-form">
    Your url: /<%= tag :input, :value => @user.slug, :id => "user-slug" %>
    <input type="submit" value="Update" />
  </form>
  <section id="location-types">
   <header>Location Types</header>
   <table id="user-location_types" data-json="<%= @user.location_types.to_json %>">
    <% @user.location_types.each do |type| %>
      <tr class="location-type">
        <td>
          <% if type.icon_url %>
            <%= image_tag type.icon_url %>
          <% end %>
        </td>
        <td>
          <%= link_to type.title, user_location_type_path(:user_id => type.user.id, :id => type.slug) %>
        </td>
        <td>
          <%= type.locations.count %> locations
          <%= link_to "Create new", new_location_path(type) %>
        </td>
        <td>
          <a class="remove">x</a>
        </td>
      </tr> 
    <% end %> 
   </table>
  </section>
  <section id="locations">
   <header>Locations</header>
   <table id="user-locations" data-json="<%= @user.locations.to_json %>">
    <% @user.locations.each do |location| %>
      <tr class="location" data-json="<%= location.to_json  %>">
        <td>
          <% if location.photo_url %>
            <%= image_tag location.photo_url %>
          <% end %>
        </td>
        <td>
          <%= link_to location.title, location_path(location) %> 
        </td>
        <td>
          <%= location.journal_entries.count %> journal entries
        </td>
        <td>
          <a class="remove">x</a>
        </td>
      </tr>
    <% end %> 
   </table>
  </section>
 </section>

<% content_for :scripts_footer do %>
 <script>
  window.addEventListener("DOMContentLoaded", function () {
   var userJson = JSON.parse( document.getElementById("user").getAttribute("data-json") ),
   user = new User(userJson),
   locationTypesJSON = JSON.parse( document.getElementById("user-location_types").getAttribute("data-json")  ),
   userLocationTypes = new LocationTypeCollection(locationTypesJSON),
   locationsJSON = JSON.parse( document.getElementById("user-locations").getAttribute("data-json") ),
   userLocations = new LocationCollection(locationsJSON),
   LocationTypeList = Backbone.View.extend({
    collection: userLocations,
    initialize: function () {
     var view = this
     this.collection.on("remove", function (model, collection, options) {
      model.setUser(user)
      model.destroy({
       success:function () {
        options.elem.parentNode.removeChild(options.elem)   
       }
      })
     })
    },
    render: function () {
     var list = this;
     [].forEach.call(this.el.getElementsByClassName("location-type"), function (elem, index) {
      var remove = elem.getElementsByClassName("remove").item(0)
      remove.addEventListener("click", function () {
       var model = list.collection.at(index)
       list.collection.remove(model, {elem:elem}) 
      })
     })
    }
   }),
   locationTypeList = new LocationTypeList({
    el: document.getElementById("user-location_types")
   }).render(),
   LocationList = Backbone.View.extend({
    collection: userLocations,
    initialize: function () {
     var view = this
     this.collection.on("remove", function (model, collection, options) {
      model.setUser(user)
      model.destroy({
       success:function () {
        options.elem.parentNode.removeChild(options.elem)   
       }
      })
     })
    },
    render: function () {
     var list = this;
     [].forEach.call(this.el.getElementsByClassName("location"), function (elem, index) {
      var remove = elem.getElementsByClassName("remove").item(0)
      remove.addEventListener("click", function () {
       var model = list.collection.at(index)
       model.setLocationType(userLocationTypes.get(model.get("location_type_id")))
       list.collection.remove(model, {elem:elem}) 
      })
     })
    }
   }),
   locationList = new LocationList({
    el: document.getElementById("user-locations")
   }).render()

   document.getElementById("user-form").addEventListener("submit", function (e) {
    e.preventDefault()
    user.isCurrentUser = true
    user.jsonPrefix = true
    user.save({slug: document.getElementById("user-slug").value}, {
      success:function () {
        window.location.reload()
      }
    })
   })

  })
 </script>
<% end %>
