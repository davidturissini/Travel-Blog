 <section id="user" data-json="<%= @user.to_json %>">
  <header><%= @user.name %>'s map</header>
  <section>
   <ul id="user-location_types" data-json="<%= @user.location_types.to_json %>">
    <% @user.location_types.each do |type| %>
     <li>
      <article class="location-type" data-id="<%=   %>">
       <%= link_to type.title, user_location_type_path(:user_id => type.user.id, :id => type.slug) %> 
       <a class="remove">x</a>
      </article> 
     </li>
    <% end %> 
   </ul>
  </section>
 </section>

<% content_for :scripts_footer do %>
 <script>
  window.addEventListener("DOMContentLoaded", function () {
   var userJson = JSON.parse( document.getElementById("user").getAttribute("data-json") ),
   user = new User(userJson),
   locationTypesJSON = JSON.parse( document.getElementById("user-location_types").getAttribute("data-json")  ) 
   userLocations = new LocationTypeCollection(locationTypesJSON),
   LocationTypeList = Backbone.View.extend({
    collection: userLocations,
    initialize: function () {
     var view = this
     this.collection.on("remove", function (model, collection, options) {
      model.setUser(user)
      model.destroy({
       success:function () {
        options.elem.parentNode.removeChild(options.elem)   
       }
      })
     })
    },
    render: function () {
     var list = this;
     [].forEach.call(this.el.getElementsByClassName("location-type"), function (elem, index) {
      var remove = elem.getElementsByClassName("remove").item(0)
      remove.addEventListener("click", function () {
       var model = list.collection.at(index)
       list.collection.remove(model, {elem:elem}) 
      })
     })
    }
   }),
   locationTypeList = new LocationTypeList({
    el: document.getElementById("user-location_types")
   }).render()
  })
 </script>
<% end %>
