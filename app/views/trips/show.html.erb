<article id="trip" data-user="<%= @trip.user.to_json %>" data-json="<%= @trip.to_json %>" data-maps="<%= @trip.maps.to_json %>" data-locations="<%= @trip.locations.to_json %>">
	<header class="autoclear">
		<%= image_tag @trip.user.photo.large, :class => "rounded-large left", :width => 80 %>
		<h1>
			<%= link_to user_path(@trip.user.slug) do %>
				<%= @trip.user.name %>'s<% end %> trip to
				<%= @trip.locations.first.geo_string %>
		</h1>
	</header>
	<%= render "trips/photos", :photos => @trip.photos, :location => @trip %>
	<section id="posts">
		<% @trip.journals.each do |entry| %>
			<section class="post">
				<h1><%= entry.title %></h1>	
				<div><%= entry.body.html_safe %></div>
			</section>
		<% end %>
	</section>
	<figure id="map"></figure>
	<br class="clear" />
</article>

<% content_for :scripts_footer do %>
	<script>

	window.addEventListener("DOMContentLoaded", function () {

		var trip = Trip.createFromDataAttribute( document.getElementById("trip") ),
		user = User.createFromDataAttribute(document.getElementById("trip"), "data-user"),
		locations = LocationsCollection.createFromDataAttribute(document.getElementById("trip"), "data-locations"),
		maps = MapsCollection.createFromDataAttribute(document.getElementById("trip"), "data-maps"),
		gallery = null;

		trip.setUser(user);
		trip.setLocations(locations);
		trip.setMaps(maps);

		new TripMap({
			el:document.getElementById("map"),
			model:trip
		}).render().drawLocations().drawMaps();

		if( !document.getElementById("photos") ) { return }
		var locationPhotos = document.getElementById("photos").querySelectorAll("figure"),
		hero = document.getElementById("photos").querySelector(".hero") || locationPhotos[0];
		hero.className += " hero";

		if( locationPhotos.length === 0 ) { return }
		var heroIndex = (function () {
			var index = 0;
			[].forEach.call(locationPhotos, function (photo, i) {
				if( photo == hero ) {
					index = i
				}
			})

			return index;
		})();


		var shuffleHash = {
			el:document.getElementById("photos"),
			hero:hero,
			elements:Array.prototype.slice.call(locationPhotos, 0, 30),
			heroClick: function () {
				if( !gallery ) {
					gallery = new Gallery({
							el:shuffleHash.el,
							photos:locationPhotos,
							selectedIndex:heroIndex,
							onClose:function () {
								gallery = null
								
							}
						}).render()
				}
			},
			elementClick: function (event, options) {
				if( !gallery ) {
					gallery = new Gallery({
							el:shuffleHash.el,
							photos:locationPhotos,
							selectedIndex:options.index,
							onClose:function () {
								gallery = null
								
							}
						}).render()
				}
			},
			elementShouldPosition: function (options) {
				var photo = options.element.querySelector("img")
				if( photo.width != 0 ) {
					options.callback()
				} else {
					photo.onload = function () {
						options.callback()
					}
				}
			}
		}

		new ShuffledElements(shuffleHash).render()

		})
	</script>
<% end %>
